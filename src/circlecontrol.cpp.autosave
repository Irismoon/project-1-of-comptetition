#include "ros/ros.h"
#include "geometry_msgs/Twist.h"
#include "std_msgs/Empty.h"

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <termios.h>
#include <errno.h>
#include <math.h>

std_msgs::Empty order;
geometry_msgs::Twist cmd;

int main(int argc, char **argv)
{
    ros::init(argc, argv, "circlecontrol");
    ros::NodeHandle n;
    ros::Publisher cmd_pub = n.advertise<geometry_msgs::Twist>("/cmd_vel", 1);
    ros::Publisher takeoff_pub = n.advertise<std_msgs::Empty>("/ardrone/takeoff", 1);
    ros::Publisher land_pub = n.advertise<std_msgs::Empty>("/ardrone/land", 1);
    ros::Rate loop_rate(10);
    int index = 0;

    while(ros::ok())
    {
        index = index+1;
        cmd.linear.x = pow(index,1/2);
        //printf('y%f',cmd.linear.y);
        ROS_INFO("x:%f",index/1000.0);
        cmd.linear.y = abs(sqrt(pow(0.01,2)-pow(index/1000.0,2)));//(5.0/index>0.04) ? 0.04 : 5.0/index;
        //printf('x%f',cmd.linear.x);
        cmd.linear.z = 0.0;
        cmd.angular.x = 0.0;
        cmd.angular.y = 0.0;
        cmd.angular.z = 0.0;

        cmd_pub.publish(cmd);
        ros::spinOnce();
        loop_rate.sleep();
    }
    return 0;
}
